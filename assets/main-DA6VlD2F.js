(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function r(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(t){if(t.ep)return;t.ep=!0;const s=r(t);fetch(t.href,s)}})();{const e=document.querySelector(".btn"),o=document.querySelector(".container");e.addEventListener("click",()=>{e.classList.toggle("active"),o.classList.toggle("active");const r=document.body.style;r.overflow==="hidden"?(r.overflow="",r.height=""):(r.overflow="hidden",r.height="100%")})}$("#nav_list a[href]").on("click",function(){$(".btn").trigger("click")});$(window).on("load scroll",function(){const e=$(this).scrollTop();$(".home_header").toggleClass("is-show",e>500),$("#TOP_img, #TOP_title_h1, #TOP_title_p").toggleClass("is-show",e>-1),$("#info_text, #menu_text").toggleClass("is-show",e>-1)});function u(e,o){var r=$(window).height(),i=$(".offs").length,t=$(".ons").length;if(i)for(var s=o-i,n=0;n<i;n++){var a=s+n,f=$('.offs[data-scr="'+a+'"]'),c=f.offset().top,l=c-(r+e-r*.2);if(l<0)f.removeClass("offs").addClass("ons");else return}if(t)for(var v=t-1,n=0;n<t;n++){var a=v-n,d=$('.ons[data-scr="'+a+'"]'),c=d.offset().top,l=c-(r+e);if(l>0)d.removeClass("ons").addClass("offs");else return}}$(function(){var e=$(window).scrollTop(),o=$(".offs").length;$(".offs").each(function(r){$(this).attr("data-scr",r)}),u(e,o),$(window).on("scroll",function(){u($(window).scrollTop(),o)})});const m=document.querySelectorAll(".img-wrap"),p="img-animation",g=new IntersectionObserver(e=>{e.forEach(o=>{o.isIntersecting&&(o.target.classList.add(p),g.unobserve(o.target))})});m.forEach(e=>g.observe(e));const w=document.querySelectorAll(".title_wrap"),_="title_animation",h=new IntersectionObserver(e=>{e.forEach(o=>{o.isIntersecting&&(o.target.classList.add(_),h.unobserve(o.target))})});w.forEach(e=>h.observe(e));
